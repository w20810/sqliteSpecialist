<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup Label="UserMacros">
    <ProductionBuild>0</ProductionBuild>
    <WEBKITOUTPUTDIR>$(ProjectDir)..\build\vs2010</WEBKITOUTPUTDIR>
    <WEBKITLIBRARIESDIR>$(ProjectDir)..\WebKitLibraries\win</WEBKITLIBRARIESDIR>
    <ConfigurationBuildDir>$(WebKitOutputDir)\$(Configuration)</ConfigurationBuildDir>
  </PropertyGroup>
  <PropertyGroup>
    <_ProjectFileVersion>10.0.40219.1</_ProjectFileVersion>
  </PropertyGroup>
  <ItemDefinitionGroup>
    <ClCompile>
      <AdditionalOptions>/bigobj %(AdditionalOptions)</AdditionalOptions>
      <PreprocessorDefinitions>WIN32;_WINDOWS;WINVER=0x502;_WIN32_WINNT=0x502;_WIN32_IE=0x603;_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES=1;_HAS_EXCEPTIONS=0;BUILDING_$(ProjectName);JS_NO_EXPORT;CURL_STATICLIB;LIBXML_STATIC;LIBXSLT_STATIC;PTW32_STATIC_LIB;UCONFIG_NO_COLLATION=1;U_STATIC_IMPLEMENTATION;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ExceptionHandling>false</ExceptionHandling>
      <WarningLevel>Level4</WarningLevel>
      <TreatWarningAsError>true</TreatWarningAsError>
      <RuntimeTypeInfo>false</RuntimeTypeInfo>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <DisableSpecificWarnings>4018;4068;4099;4100;4127;4138;4180;4189;4201;4244;4251;4275;4288;4291;4305;4344;4355;4389;4481;4503;4505;4510;4512;4610;4706;4800;4951;4952;4996;6011;6031;6211;6246;6255;6387;4396;4819</DisableSpecificWarnings>
    </ClCompile>
    <Lib>
      <AdditionalOptions>/ignore:4221 %(AdditionalOptions)</AdditionalOptions>
      <OutputFile>$(OutDir)\$(ProjectName)$(WebKitConfigSuffix).lib</OutputFile>
    </Lib>
    <Midl>
      <WarnAsError>true</WarnAsError>
      <HeaderFileName>$(OutDir)\$(InputName).h</HeaderFileName>
    </Midl>
    <PostBuildEvent>
      <Command>REM Do not edit from the Visual Studio IDE! Customize via a $(ProjectName)PostBuild.cmd file
if not exist "$(ProjectDir)$(ProjectName)PostBuild.cmd" exit /b

set CONFIGURATIONBUILDDIR=$(ConfigurationBuildDir)
set CONFIGURATIONNAME=$(ConfigurationName)
set INPUTDIR=$(InputDir)
set INPUTFILENAME=$(InputFileName)
set INPUTPATH=$(InputPath)
set INTDIR=$(IntDir)
set LIBRARYCONFIGSUFFIX=$(LibraryConfigSuffix)
set OUTDIR=$(OutDir)
set PLATFORMNAME=$(PlatformName)
set PROJECTDIR=$(ProjectDir)
set PROJECTFILENAME=$(ProjectFileName)
set PROJECTNAME=$(ProjectName)
set PROJECTPATH=$(ProjectPath)
set SOLUTIONDIR=$(SolutionDir)
set SOLUTIONFILENAME=$(SolutionFileName)
set SOLUTIONNAME=$(SolutionName)
set SOLUTIONPATH=$(SolutionPath)
set TARGETDIR=$(TargetDir)
set TARGETEXT=$(TargetExt)
set TARGETFILENAME=$(TargetFileName)
set TARGETPATH=$(TargetPath)
set WEBKITCONFIGSUFFIX=$(WebKitConfigSuffix)
set WEBKITDLLCONFIGSUFFIX=$(WebKitDLLConfigSuffix)

REM If any of the above variables didn't exist previously and
REM were set to an empty string, set will set the errorlevel to 1,
REM which will cause the project-specific script to think the build
REM has failed. This cmd /c call will clear the errorlevel.
cmd /c

"$(ProjectDir)$(ProjectName)PostBuild.cmd"
</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>REM Do not edit from the Visual Studio IDE! Customize via a $(ProjectName)PreBuild.cmd file.
if not exist "$(ProjectDir)$(ProjectName)PreBuild.cmd" exit /b

set CONFIGURATIONBUILDDIR=$(ConfigurationBuildDir)
set CONFIGURATIONNAME=$(ConfigurationName)
set INPUTDIR=$(InputDir)
set INPUTFILENAME=$(InputFileName)
set INPUTPATH=$(InputPath)
set INTDIR=$(IntDir)
set LIBRARYCONFIGSUFFIX=$(LibraryConfigSuffix)
set OUTDIR=$(OutDir)
set PLATFORMNAME=$(PlatformName)
set PROJECTDIR=$(ProjectDir)
set PROJECTFILENAME=$(ProjectFileName)
set PROJECTNAME=$(ProjectName)
set PROJECTPATH=$(ProjectPath)
set SOLUTIONDIR=$(SolutionDir)
set SOLUTIONFILENAME=$(SolutionFileName)
set SOLUTIONNAME=$(SolutionName)
set SOLUTIONPATH=$(SolutionPath)
set TARGETDIR=$(TargetDir)
set TARGETEXT=$(TargetExt)
set TARGETFILENAME=$(TargetFileName)
set TARGETPATH=$(TargetPath)
set WEBKITCONFIGSUFFIX=$(WebKitConfigSuffix)
set WEBKITDLLCONFIGSUFFIX=$(WebKitDLLConfigSuffix)

REM If any of the above variables didn't exist previously and
REM were set to an empty string, set will set the errorlevel to 1,
REM which will cause the project-specific script to think the build
REM has failed. This cmd /c call will clear the errorlevel.
cmd /c

"$(ProjectDir)$(ProjectName)PreBuild.cmd"</Command>
    </PreBuildEvent>
    <PreLinkEvent>
      <Command>REM Do not edit from the Visual Studio IDE! Customize via a $(ProjectName)PreLink.cmd file.
if not exist "$(ProjectDir)$(ProjectName)PreLink.cmd" exit /b

set CONFIGURATIONBUILDDIR=$(ConfigurationBuildDir)
set CONFIGURATIONNAME=$(ConfigurationName)
set INPUTDIR=$(InputDir)
set INPUTFILENAME=$(InputFileName)
set INPUTPATH=$(InputPath)
set INTDIR=$(IntDir)
set LIBRARYCONFIGSUFFIX=$(LibraryConfigSuffix)
set OUTDIR=$(OutDir)
set PLATFORMNAME=$(PlatformName)
set PROJECTDIR=$(ProjectDir)
set PROJECTFILENAME=$(ProjectFileName)
set PROJECTNAME=$(ProjectName)
set PROJECTPATH=$(ProjectPath)
set SOLUTIONDIR=$(SolutionDir)
set SOLUTIONFILENAME=$(SolutionFileName)
set SOLUTIONNAME=$(SolutionName)
set SOLUTIONPATH=$(SolutionPath)
set TARGETDIR=$(TargetDir)
set TARGETEXT=$(TargetExt)
set TARGETFILENAME=$(TargetFileName)
set TARGETPATH=$(TargetPath)
set WEBKITCONFIGSUFFIX=$(WebKitConfigSuffix)
set WEBKITDLLCONFIGSUFFIX=$(WebKitDLLConfigSuffix)

REM If any of the above variables didn't exist previously and
REM were set to an empty string, set will set the errorlevel to 1,
REM which will cause the project-specific script to think the build
REM has failed. This cmd /c call will clear the errorlevel.
cmd /c

"$(ProjectDir)$(ProjectName)PreLink.cmd"
</Command>
    </PreLinkEvent>
    <ResourceCompile>
      <AdditionalIncludeDirectories>&amp;quot;$(IntDir)\include&amp;quot;</AdditionalIncludeDirectories>
    </ResourceCompile>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
    <Link>
      <AdditionalOptions>/SAFESEH /FIXED:NO /dynamicbase /ignore:4221 %(AdditionalOptions)</AdditionalOptions>
      <OutputFile>$(OutDir)\$(ProjectName)$(WebKitConfigSuffix).exe</OutputFile>
      <AdditionalLibraryDirectories>$(ConfigurationBuildDir)\lib;$(WebKitLibrariesDir)\lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <ImportLibrary>$(ConfigurationBuildDir)\lib\$(TargetName).lib</ImportLibrary>
      <SubSystem>Windows</SubSystem>
    </Link>
  </ItemDefinitionGroup>
  <PropertyGroup Label="Configuration">
    <OutDir>$(ConfigurationBuildDir)\bin\</OutDir>
    <IntDir>$(ConfigurationBuildDir)\obj\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemGroup>
    <BuildMacro Include="ProductionBuild">
      <Value>$(ProductionBuild)</Value>
    </BuildMacro>
    <BuildMacro Include="WEBKITOUTPUTDIR">
      <Value>$(WEBKITOUTPUTDIR)</Value>
      <EnvironmentVariable>true</EnvironmentVariable>
    </BuildMacro>
    <BuildMacro Include="WEBKITLIBRARIESDIR">
      <Value>$(WEBKITLIBRARIESDIR)</Value>
      <EnvironmentVariable>true</EnvironmentVariable>
    </BuildMacro>
    <BuildMacro Include="ConfigurationBuildDir">
      <Value>$(ConfigurationBuildDir)</Value>
    </BuildMacro>
  </ItemGroup>
</Project>